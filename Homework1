from fastapi import FastAPI, File, UploadFile, HTTPException
from fastapi.middleware.cors import CORSMiddleware
from PIL import Image
from io import BytesIO
import uvicorn


app = FastAPI()


app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"], 
    allow_methods=["*"], 
    allow_headers=["*"], 

@app.post("/analyze-image/")
async def analyze_image(file: UploadFile = File(...)):

    try:
       
        contents = await file.read()
        
   
        image_stream = BytesIO(contents)
        
 
        image = Image.open(image_stream)

        width, height = image.size
        image_format = image.format
        mode = image.mode

        return {
            "filename": file.filename,
            "width": width,
            "height": height,
            "format": image_format,
            "mode": mode
        }
        
    except Exception as e:
        raise HTTPException(
            status_code=400,
            detail=f"wrong: {str(e)}"
        )
    finally:
        await file.close()

@app.get("/")
async def health_check():
    return {"status": "normal"}

if __name__ == "__main__":
    uvicorn.run(app, host="0.0.0.0", port=8000)
